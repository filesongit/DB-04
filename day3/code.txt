import {legacy_createStore} from "redux";
let createStore = legacy_createStore;
// action type
const ADD_HERO = "ADD_HERO";

// action creators
let addHero = () => {
    return {
        type : ADD_HERO
    }
}

// default / intial state
const initalState = {
    numberOfHeroes : 0
}

// reducer pure function
let reducer = (state = initalState, action) => {
    switch(action.type){
        case ADD_HERO : return { numberOfHeroes : state.numberOfHeroes + 1 }
        default : return state
    }
};

let store = createStore(reducer);

// intial store
console.log("Initial Value ",store.getState());
// subscribe
let unsubscribe = store.subscribe(function(){
    console.log("Subscribe to watch changes in the store ",store.getState());
});

store.dispatch(addHero());// 1
store.dispatch(addHero());// 2
store.dispatch(addHero());// 3
store.dispatch(addHero());// 4
unsubscribe();
store.dispatch(addHero());// 5
store.dispatch(addHero());// 6
